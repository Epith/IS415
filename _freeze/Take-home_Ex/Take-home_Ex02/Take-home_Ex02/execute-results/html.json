{
  "hash": "d5417a96178b6b58ed0475c9cda5e566",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-Home Exercise 2\"\nauthor: \"Kwee Cheng\"\ndate: \"September 25, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\ncategories: [Take-Home, Code]\n---\n\n\n\n## Background\n\nDrug abuse is associated with significant negative health, financial and social consequences. Yet, illicit drug consumption remains highly prevalent and continues to be a growing problem worldwide. In 2021, 1 in 17 people aged 15–64 in the world had used a drug in the past 12 months. Notwithstanding population growth, the estimated number of drug users grew from 240 million in 2011 to 296 million in 2021.\n\nThe geopolitics of Thailand which is near the [Golden Triangle](https://en.wikipedia.org/wiki/Golden_Triangle_(Southeast_Asia)) of Indochina, the largest drug production site in Asia, and the constant transportation infrastructure development made Thailand became market and transit routes for drug trafficking to the third countries.\n\nIn Thailand, drug abuse is one of the major social issue. There are about 2.7 million youths using drugs in Thailand. Among youths aged between 15 and 19 years, there are about 300,000 who have needs for drug treatment. Most of Thai youths involved with drugs are vocational-school students, which nearly doubles in number compared to secondary-school students.\n\n## Objectives\n\n-   If the key indicators of drug abuse of Thailand are independent from space.\n\n-   If the indicators of drug abuse is indeed spatial dependent, then, you would like to detect where are the clusters and outliers, and the hotspots.\n\n-   Last but not least, you are also interested to investigate how the observation above evolve over time.\n\n## Dataset\n\n-   [Thailand Drug Offenses \\[2017-2022\\]](https://www.kaggle.com/datasets/thaweewatboy/thailand-drug-offenses-2017-2022) at Kaggle.\n\n-   [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?) at HDX. You are required to use the province boundary data set.\n\n## Packages\n\n-   **sf** provides a standardised way to work with spatial vector data (points, lines, polygons)\n\n-   **spdep** focuses on spatial econometrics and spatial statistics\n\n-   **tmap** create thematic maps\n\n-   **tidyverse** for easy data manipulation and some visualisation\n\n-   **knitr** facilitates the integration of R code and documentation in reproducible research reports\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sfdep, tmap, tidyverse, knitr)\n```\n:::\n\n\n\n## **Importing data**\n\nLet's load the csv file from kaggle about Thailand's drug offenses\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_drug <- read_csv(\"data/thai_drug_offenses_2017_2022.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 7392 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): types_of_drug_offenses, province_th, province_en\ndbl (2): fiscal_year, no_cases\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2932)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(thai_drug)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" \n```\n\n\n:::\n:::\n\n\n\nNext let's load the shapefile of Thailand's province boundary\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_sf <- st_read(dsn = \"data/\", \n                 layer = \"tha_admbnda_adm1_rtsd_20220121\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\IS415\\Take-home_Ex\\Take-home_Ex02\\data' using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_sf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   Shape_Leng Shape_Area                  ADM1_EN       ADM1_TH ADM1_PCODE\n1    2.417227 0.13133873                  Bangkok  กรุงเทพมหานคร       TH10\n2    1.695100 0.07926199             Samut Prakan    สมุทรปราการ       TH11\n3    1.251111 0.05323766               Nonthaburi         นนทบุรี       TH12\n4    1.884945 0.12698345             Pathum Thani        ปทุมธานี       TH13\n5    3.041716 0.21393797 Phra Nakhon Si Ayutthaya พระนครศรีอยุธยา       TH14\n6    1.739908 0.07920961                Ang Thong        อ่างทอง       TH15\n7    5.693342 0.54578838                 Lop Buri          ลพบุรี       TH16\n8    1.778326 0.06872655                Sing Buri         สิงห์บุรี       TH17\n9    2.896316 0.20907828                 Chai Nat         ชัยนาท       TH18\n10   4.766446 0.29208711                 Saraburi         สระบุรี       TH19\n   ADM1_REF ADM1ALT1EN ADM1ALT2EN ADM1ALT1TH ADM1ALT2TH  ADM0_EN   ADM0_TH\n1      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n2      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n3      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n4      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n5      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n6      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n7      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n8      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n9      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n10     <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n   ADM0_PCODE       date    validOn    validTo                       geometry\n1          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((100.6139 13...\n2          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((100.7306 13...\n3          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((100.3415 14...\n4          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((100.8916 14...\n5          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((100.5131 14...\n6          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((100.3332 14...\n7          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((101.3453 15...\n8          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((100.3691 15...\n9          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((100.1199 15...\n10         TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((101.3994 15...\n```\n\n\n:::\n:::\n\n\n\n## Data Wrangling\n\n### Misspelled province\n\nI would like to perform a left join on province_en of *thai_drug* and ADM1_EN of *thai_sf*, so I would have to check if there are any missing data or mismatch\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_data <- bind_cols(thai_drug = sort(unique(thai_drug$province_en)), thai_sf = sort(unique(thai_sf$ADM1_EN)))\n\n# Create a new column to compare the values\ncombined_data <- combined_data %>%\n  mutate(same_values = thai_drug == thai_sf) %>% filter(same_values == FALSE)\n\n# View the result\ncombined_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  thai_drug thai_sf   same_values\n  <chr>     <chr>     <lgl>      \n1 buogkan   Bueng Kan FALSE      \n2 Loburi    Loei      FALSE      \n3 Loei      Lop Buri  FALSE      \n```\n\n\n:::\n:::\n\n\n\nFrom here we can see that there is a mismatch in the data where there are spelling errors from the data provided kaggle so lets change it.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_drug <- thai_drug %>%\n  mutate(province_en = recode(province_en,\n                              \"buogkan\" = \"Bueng Kan\",\n                              \"Loburi\" = \"Lop Buri\"))\n```\n:::\n\n\n\nLet's check if there is any mismatch again\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_data <- bind_cols(thai_drug = sort(unique(thai_drug$province_en)), thai_sf = sort(unique(thai_sf$ADM1_EN)))\n\n\ncombined_data <- combined_data %>%\n  mutate(same_values = thai_drug == thai_sf) %>% filter(same_values == FALSE)\n\n\ncombined_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 3\n# ℹ 3 variables: thai_drug <chr>, thai_sf <chr>, same_values <lgl>\n```\n\n\n:::\n:::\n\n\n\n### CRS check\n\nLet's check the crs of the Thai boundary file\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(thai_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n```\n\n\n:::\n:::\n\n\n\nLet's convert it into the projected coordinate system of 32647\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_sf <- thai_sf %>% st_transform(crs = 32647)\nst_crs(thai_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]\n```\n\n\n:::\n:::\n\n\n\n### Hole in boundary file\n\nNext check if there are any holes with the boundary file\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nu_thai <- st_union(thai_sf)\nplot(u_thai)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n### Missing row check\n\nLastly check for the drug abuse csv if there are any missing rows\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nna <- thai_drug %>%\n  summarise(na_year = sum(is.na(fiscal_year)),\n            na_province = sum(is.na(province_en)),\n            na_drug_offense = sum(is.na(types_of_drug_offenses)),\n            na_cases = sum(is.na(no_cases)))\nprint(na)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  na_year na_province na_drug_offense na_cases\n    <int>       <int>           <int>    <int>\n1       0           0               0        0\n```\n\n\n:::\n:::\n\n\n\n### Left Join\n\nGreat now let's left join both the boundary file and the csv\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai <- left_join(thai_sf,thai_drug, by = c(\"ADM1_EN\" = \"province_en\")) %>%\n        select(1:3, 17:19,21)\n```\n:::\n\n\n\nAs the combined file is quite huge let's see how we can split it even more, let's choose the only relevant type of drug offenses\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(thai$types_of_drug_offenses)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"drug_use_cases\"                                        \n [2] \"suspects_in_drug_use_cases\"                            \n [3] \"possession_cases\"                                      \n [4] \"suspects_in_possession_cases\"                          \n [5] \"possession_with_intent_to_distribute_cases\"            \n [6] \"suspects_in_possession_with_intent_to_distribute_cases\"\n [7] \"trafficking_cases\"                                     \n [8] \"suspects_in_trafficking_cases\"                         \n [9] \"production_cases\"                                      \n[10] \"suspects_in_production_cases\"                          \n[11] \"import_cases\"                                          \n[12] \"suspects_in_import_cases\"                              \n[13] \"export_cases\"                                          \n[14] \"suspects_in_export_cases\"                              \n[15] \"conspiracy_cases\"                                      \n[16] \"suspects_in_conspiracy_cases\"                          \n```\n\n\n:::\n:::\n\n\n\nLet's choose everything but the suspects as suspects are not really confirmed cases but it could provide some supplementary in comparison.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_offenses <- c(\n  \"drug_use_cases\", \"possession_cases\", \"possession_with_intent_to_distribute_cases\", \"trafficking_cases\", \"production_cases\", \"import_cases\", \"export_cases\", \"conspiracy_cases\"\n)\n\nthai <- thai %>% filter(types_of_drug_offenses %in% drug_offenses )\n```\n:::\n\n\n\nNext let's split it up by the years\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug <- list()\nfor (year in 2017:2022) {\n  drug[[as.character(year)]] <- thai %>% filter(fiscal_year == year)\n}\n\nglimpse(drug[[\"2017\"]])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 616\nColumns: 7\n$ Shape_Leng             <dbl> 2.417227, 2.417227, 2.417227, 2.417227, 2.41722…\n$ Shape_Area             <dbl> 0.13133873, 0.13133873, 0.13133873, 0.13133873,…\n$ ADM1_EN                <chr> \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Ba…\n$ fiscal_year            <dbl> 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,…\n$ types_of_drug_offenses <chr> \"drug_use_cases\", \"possession_cases\", \"possessi…\n$ no_cases               <dbl> 11871, 9224, 6374, 950, 316, 0, 2, 10, 820, 334…\n$ geometry               <MULTIPOLYGON [m]> MULTIPOLYGON (((674339.8 15..., MU…\n```\n\n\n:::\n:::\n\n\n\n### Simple Visualisations\n\nLet's just do a simple visualisation of the drug uses in the year 2017 to see what we are dealing with\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqtm(drug[[\"2017\"]], \"no_cases\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.62, 0.58. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\nNothing much can be visualised so let's separate out the type of cases again to only drug use\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemp <- drug[[\"2017\"]]\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntemp %>%\n  filter(types_of_drug_offenses == \"drug_use_cases\") %>%\n  tm_shape() +\n  tm_fill(\"no_cases\",\n            n = 5,\n            style = \"equal\") +  \n    tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.62. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n## **Global Measures of Spatial Autocorrelation**\n\n### **Calculating Neighbours and Weights**\n\nI would be defining neighbour's based on Queens contiguity, and also let's assign spatial weights to each neighbouring polygon\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q_list <- list()\nfor (year in 2017:2022) {\n  wm_q <- drug[[as.character(year)]] %>%\n    mutate(nb = st_contiguity((.), queen=TRUE),\n           wt = st_weights(nb, style = \"W\",allow_zero=TRUE),\n           .before = 1)\n  wm_q_list[[as.character(year)]] <- wm_q\n  \n}\n```\n:::\n\n\n\nAs this takes a lot of time lets save this list into a rds file\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(wm_q_list, \"data/rds/wm_q_list.rds\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n### **Global Moran’s I Test**\n\nTo assess spatial autocorrelation in our dataset, or how the presence of drug use cases in a province may form clusters.\n\n::: panel-tabset\n### 2017\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- wm_q_list[[\"2017\"]]\nglobal_moran_test(wm_q$no_cases,\n           wm_q$nb,\n           wm_q$wt,\n           zero.policy = TRUE,\n           na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.8794, p-value = 5.319e-07\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     3.981645e-02     -1.626016e-03      7.213589e-05 \n```\n\n\n:::\n:::\n\n\n\n### 2018\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- wm_q_list[[\"2018\"]]\nglobal_moran_test(wm_q$no_cases,\n           wm_q$nb,\n           wm_q$wt,\n           zero.policy = TRUE,\n           na.action = na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 3.6488, p-value = 0.0001318\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     2.910879e-02     -1.626016e-03      7.095291e-05 \n```\n\n\n:::\n:::\n\n\n\n### 2019\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- wm_q_list[[\"2019\"]]\nglobal_moran_test(wm_q$no_cases,\n           wm_q$nb,\n           wm_q$wt,\n           zero.policy = TRUE,\n           na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 3.2694, p-value = 0.0005389\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     2.654296e-02     -1.626016e-03      7.423478e-05 \n```\n\n\n:::\n:::\n\n\n\n### 2020\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- wm_q_list[[\"2020\"]]\nglobal_moran_test(wm_q$no_cases,\n           wm_q$nb,\n           wm_q$wt,\n           zero.policy = TRUE,\n           na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.9975, p-value = 0.001361\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     2.444995e-02     -1.626016e-03      7.567537e-05 \n```\n\n\n:::\n:::\n\n\n\n### 2021\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- wm_q_list[[\"2021\"]]\nglobal_moran_test(wm_q$no_cases,\n           wm_q$nb,\n           wm_q$wt,\n           zero.policy = TRUE,\n           na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.6409, p-value = 0.004134\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     2.149092e-02     -1.626016e-03      7.662109e-05 \n```\n\n\n:::\n:::\n\n\n\n### 2022\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- wm_q_list[[\"2022\"]]\nglobal_moran_test(wm_q$no_cases,\n           wm_q$nb,\n           wm_q$wt,\n           zero.policy = TRUE,\n           na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 1.8315, p-value = 0.03351\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     1.448435e-02     -1.626016e-03      7.737631e-05 \n```\n\n\n:::\n:::\n\n\n:::\n\nFrom the test for the different years, the positive moran’s I statistic suggests that there is clustering, or a degree of spatial autocorrelation. This might be expected as spreading the use of drugs to neighbouring places seems like a common thing to do, if you wanna spread your influence.\n\nWe can also see that the P-value is small. From a frequentist approach, we can see that this is unlikely to have occured by chance.\n\nTo strengthen our findings, we run a monte-carlo simulation.\n\n### **Global Moran’s** I permutation test\n\n::: panel-tabset\n### 2017\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- wm_q_list[[\"2017\"]]\nglobal_moran_perm(wm_q$no_cases,\n           wm_q$nb,\n           wm_q$wt,\n           zero.policy = TRUE,\n           nsim = 999,\n           na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.039816, observed rank = 998, p-value = 0.004\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n\n### 2018\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- wm_q_list[[\"2018\"]]\nglobal_moran_perm(wm_q$no_cases,\n           wm_q$nb,\n           wm_q$wt,\n           zero.policy = TRUE,\n           nsim = 999,\n           na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.029109, observed rank = 999, p-value = 0.002\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n\n### 2019\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- wm_q_list[[\"2019\"]]\nglobal_moran_perm(wm_q$no_cases,\n           wm_q$nb,\n           wm_q$wt,\n           zero.policy = TRUE,\n           nsim = 999,\n           na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.026543, observed rank = 997, p-value = 0.006\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n\n### 2020\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- wm_q_list[[\"2020\"]]\nglobal_moran_perm(wm_q$no_cases,\n           wm_q$nb,\n           wm_q$wt,\n           zero.policy = TRUE,\n           nsim = 999,\n           na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.02445, observed rank = 985, p-value = 0.03\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n\n### 2021\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- wm_q_list[[\"2021\"]]\nglobal_moran_perm(wm_q$no_cases,\n           wm_q$nb,\n           wm_q$wt,\n           zero.policy = TRUE,\n           nsim = 999,\n           na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.021491, observed rank = 986, p-value = 0.028\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n\n### 2022\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- wm_q_list[[\"2022\"]]\nglobal_moran_perm(wm_q$no_cases,\n           wm_q$nb,\n           wm_q$wt,\n           zero.policy = TRUE,\n           nsim = 999,\n           na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.014484, observed rank = 954, p-value = 0.092\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n:::\n\nFrom the outputs above, we can observe that the Moran’s I statistic (after 1000 permutations) for the year 2017 **0.039816** with a p-value \\< **2.2e-16,** year 2018 **0.029109** with a p-value 0.002, year 2019 **0.026543** with a p-value 0.006, year 2020 **0.02445** with a p-value 0.03, year 2021 **0.014484** with a p-value 0.092. All of these are almost identical to the previous result with low p-value which suggest that it did not happen randomly.\n\nWe can visualise it with a histogram\n\n::: panel-tabset\n### 2017\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- wm_q_list[[\"2017\"]]\ngmres <-global_moran_perm(wm_q$no_cases,\n                   wm_q$nb,\n                   wm_q$wt,\n                   zero.policy = TRUE,\n                   nsim = 999,\n                   na.action=na.omit)\n\nhist(gmres$res, main=\"Histogram of Global Moran's I Monte-Carlo Simulation 2017\", xlab=\"Monte-Carlo Results\", ylab=\"Frequency\")\n\nabline(v = gmres$statistic, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n\n### 2018\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- wm_q_list[[\"2018\"]]\ngmres <-global_moran_perm(wm_q$no_cases,\n                   wm_q$nb,\n                   wm_q$wt,\n                   zero.policy = TRUE,\n                   nsim = 999,\n                   na.action=na.omit)\n\nhist(gmres$res, main=\"Histogram of Global Moran's I Monte-Carlo Simulation 2018\", xlab=\"Monte-Carlo Results\", ylab=\"Frequency\")\n\nabline(v = gmres$statistic, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\n\n### 2019\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- wm_q_list[[\"2019\"]]\ngmres <-global_moran_perm(wm_q$no_cases,\n                   wm_q$nb,\n                   wm_q$wt,\n                   zero.policy = TRUE,\n                   nsim = 999,\n                   na.action=na.omit)\n\nhist(gmres$res, main=\"Histogram of Global Moran's I Monte-Carlo Simulation 2019\", xlab=\"Monte-Carlo Results\", ylab=\"Frequency\")\n\nabline(v = gmres$statistic, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\n\n### 2020\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- wm_q_list[[\"2020\"]]\ngmres <-global_moran_perm(wm_q$no_cases,\n                   wm_q$nb,\n                   wm_q$wt,\n                   zero.policy = TRUE,\n                   nsim = 999,\n                   na.action=na.omit)\n\nhist(gmres$res, main=\"Histogram of Global Moran's I Monte-Carlo Simulation 2020\", xlab=\"Monte-Carlo Results\", ylab=\"Frequency\")\n\nabline(v = gmres$statistic, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\n\n### 2021\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- wm_q_list[[\"2021\"]]\ngmres <-global_moran_perm(wm_q$no_cases,\n                   wm_q$nb,\n                   wm_q$wt,\n                   zero.policy = TRUE,\n                   nsim = 999,\n                   na.action=na.omit)\n\nhist(gmres$res, main=\"Histogram of Global Moran's I Monte-Carlo Simulation 2021\", xlab=\"Monte-Carlo Results\", ylab=\"Frequency\")\n\nabline(v = gmres$statistic, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\n:::\n\n## Local Moran I\n\nLocal Indicators of Spatial Association, or LISA, let us evaluate clusters between provinces. Where higher values denote that the region is more heavily influenced by its surroundings.\n\n### Calculating Local Moran I\n\nCalculating local Moran’s I statistics and append the results to the original dataframe as new columns.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_list <- list()\nfor (year in 2017:2022) {\n  wm_q <- wm_q_list[[as.character(year)]] %>%\n          mutate(local_moran = local_moran(\n            no_cases, nb, wt, nsim = 999, zero.policy=TRUE),\n                 .before = 1) %>%\n          unnest(local_moran)\n  lisa_list[[as.character(year)]] <- wm_q\n  \n}\n```\n:::\n\n\n\n### Visualising Local Moran I\n\n::: panel-tabset\n### 2017\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa <- lisa_list[[\"2017\"]]\nmap1 <- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of No of cases\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n\n\nFrom this map, we can observe statistically significant spatial autocorrelation in some central and central south province and the southern region. In the case of the central region, the significant local Moran’s I statistics tell us that for this province may or may not be a cluster as its quite close to being statistically insignificant or it could be an outlier. However for the central south of Thailand it seems to be statistically significant and the cluster did not happen by choice. Upon further looking at the province Bangkok seems to be one of the areas. The high clustering could be due to it being a tourist spot where they target foreigners which would have the money to buy drugs? But nothing much could be known.\n\n![](images/clipboard-1240825146.png)\n\nAs for the very south of Thailand it could be outliers which affect the southern Islands as it is surround by statistically insignificant places. And it is not really a widely popular tourist spot, where it could have a market for it.\n\n![](images/clipboard-720100643.png)\n\n### 2018\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa <- lisa_list[[\"2018\"]]\nmap1 <- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of No of cases\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n\n\nFrom this map, we can observe again that there is statistically significant spatial autocorrelation in central south province and the southern region. In the case of the central south it is the same few provinces which have high statistical significance which shows that the clustering wasn't random and it is indeed a cluster with high drug cases. Also the central province is not gone, which means that it was indeed an outlier. For the southern province, it seems like the previous few islands were indeed outliers, and now the the remaining province seems to be becoming less statistically insignificant.\n\n### 2019\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa <- lisa_list[[\"2019\"]]\nmap1 <- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of No of cases\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n\n\nLikewise it is the same as for the year 2018, however something to be seen is that the central south province, the p-value seems to be getting higher but is of statistical significance. Could it be that the drug operations are being handled and therefore they have to change the base of operation?\n\n### 2020\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa <- lisa_list[[\"2020\"]]\nmap1 <- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of No of cases\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n\n\nIt seems like the hotspot of clustering of near central south seems to be dispersing, and the outlier of the central province seems to be back. However interesting the southern region seems to be expanding and the clustering seems like its starting to be satistically significant.\n\n### 2021\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa <- lisa_list[[\"2021\"]]\nmap1 <- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of No of cases\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n\n\nThe central south provinces which was a hotspot in 2017-2019 seems to be completely gone and the area which we thought was an outlier in central area. It seems to have spread its fluence suggesting that there might be some clustering happening. However there could be a potential outlier in the far east. Likewise there is still some sort of clustering at the southern region.\n\n### 2022\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa <- lisa_list[[\"2022\"]]\nmap1 <- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of No of cases\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\n\nFor this year there was complete shift, the previous years clustering seems to be completely gone and it has now been shift to the north-eastern region of Thailand which is rather interesting as there was no prior suggestion that it could happen. Near the western region there is some small clustering happening.\n:::\n\n### LISA\n\nThe local indicator of spatial association (LISA) for each observation gives an indication of the extent of significant spatial clustering of similar values around that observation. LISA map is a categorical map showing type of outliers and clusters. There are two types of outliers namely: **High-Low** and **Low-High** outliers. Likewise, there are two type of clusters namely: **High-High** and **Low-Low** cluaters.\n\n-   **High-Low Outliers:** Provinces with a high value of drug cases, surrounded by neighbouring provinces with low values of drug cases.\n\n-   **Low-High Outliers**: Provinces with a low value of drug cases, surrounded by neighbouring provinces with high values of drug cases.\n\n-   **High-High Clusters**: Provinces with a high value of drug cases, surrounded by neighbouring provinces with high values of drug cases.\n\n-   **Low-Low Clusters**: Provinces with a low value of drug cases, surrounded by neighbouring provinces with low values of drug cases.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa2017_sig <- lisa_list[[\"2017\"]] %>% filter(p_ii_sim < 0.05)\nlisa2018_sig <- lisa_list[[\"2018\"]] %>% filter(p_ii_sim < 0.05)\nlisa2019_sig <- lisa_list[[\"2019\"]] %>% filter(p_ii_sim < 0.05)\nlisa2020_sig <- lisa_list[[\"2020\"]] %>% filter(p_ii_sim < 0.05)\nlisa2021_sig <- lisa_list[[\"2021\"]] %>% filter(p_ii_sim < 0.05)\nlisa2022_sig <- lisa_list[[\"2022\"]] %>% filter(p_ii_sim < 0.05)\n\n\n# Create individual maps\nmap_2017 <- tm_shape(lisa_list[[\"2017\"]]) +\n  tm_polygons() + \n  tm_borders(alpha = 0.5) + \n  tm_shape(lisa2017_sig) + \n  tm_fill(\"mean\", title = \"LISA class\") +\n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA map of drug cases 2017\", main.title.size = 1)\n\nmap_2018 <- tm_shape(lisa_list[[\"2018\"]]) +\n  tm_polygons() + \n  tm_borders(alpha = 0.5) + \n  tm_shape(lisa2018_sig) + \n  tm_fill(\"mean\", title = \"LISA class\") +\n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA map of drug cases 2018\", main.title.size = 1)\n\nmap_2019 <- tm_shape(lisa_list[[\"2019\"]]) +\n  tm_polygons() + \n  tm_borders(alpha = 0.5) + \n  tm_shape(lisa2019_sig) + \n  tm_fill(\"mean\", title = \"LISA class\") +\n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA map of drug cases 2019\", main.title.size = 1)\n\nmap_2020 <- tm_shape(lisa_list[[\"2020\"]]) +\n  tm_polygons() + \n  tm_borders(alpha = 0.5) + \n  tm_shape(lisa2020_sig) + \n  tm_fill(\"mean\", title = \"LISA class\") +\n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA map of drug cases 2020\", main.title.size = 1)\n\nmap_2021 <- tm_shape(lisa_list[[\"2021\"]]) +\n  tm_polygons() + \n  tm_borders(alpha = 0.5) + \n  tm_shape(lisa2021_sig) + \n  tm_fill(\"mean\", title = \"LISA class\") +\n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA map of drug cases 2021\", main.title.size = 1)\n\nmap_2022 <- tm_shape(lisa_list[[\"2022\"]]) +\n  tm_polygons() + \n  tm_borders(alpha = 0.5) + \n  tm_shape(lisa2022_sig) + \n  tm_fill(\"mean\", title = \"LISA class\") +\n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA map of drug cases 2022\", main.title.size = 1)\n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntmap_arrange(map_2017, map_2018, map_2019, map_2020, map_2021, map_2022, ncol = 3)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n\n\n-   **High-Low Outliers:** Interestingly this only occurs for the year 2017, 2018 and 2020. And are generally found near low-low class\n\n-   **Low-High Outliers**: Most of the province classified under this are situated near the central south of Thailand which is near the tourist area and also the very southern region. And for 2022 its actually in the northern eastern region.\n\n-   **High-High Clusters**: There is an absence of any high-high classification, suggest that there are no high-value province surrounded by high-value province\n\n-   **Low-Low Clusters**: Many of the provinces classified here are actually found in the western part of Thailand which is somewhat near the tourist area of Bangkok where there are low-high outliers.\n\n## Emerging Hot Spot Analysis\n\n### Calculating the local Gi\\*\n\nEmerging hot spot Analysis (EHSA) is a technique that falls under exploratory spatial data analysis (ESDA). It combines the traditional ESDA technique of hot spot analysis using the Getis-Ord Gi\\* statistic with the traditional time-series Mann-Kendall test for monotonic trends.\n\nThe goal of EHSA is to evaluate how hot and cold spots are changing over time. It helps us answer the questions: are they becoming increasingly hotter, are they cooling down, or are they staying the same?\n\nIn brief, EHSA works by calculating the Gi\\* for each time period. The series of Gi\\* at each location is treated as a time-series and evaluated for a trend using the Mann-Kendall statistic. The Gi\\* and the Mann-Kendall are compared together to create 17 unique classifications to help better understand how the locations have changed over time.\n\nFirst we create a neighbor list ensuring that the self is included and then create the weights list from the new neighbors list. Let's do this for the year 2017 only\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_idw_2017 <- drug[[\"2017\"]] %>%\n    mutate(nb = include_self(st_contiguity(geometry)),\n           wt = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n           .before = 1)\n```\n:::\n\n\n\nBefore we forget let's write the *wm_idw_2017* into an rds file for faster access\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(wm_idw_2017, \"data/rds/wm_idw_2017.rds\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\nFollowing, we calculate the local Gi\\* using [`local_gstar_perm()`](https://sfdep.josiahparry.com/reference/local_gstar) on the `no_cases` column which creates a new data frame column called `gi_star`. We then unnest it using [`tidyr::unnest()`](https://tidyr.tidyverse.org/reference/unnest.html).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncases_gistar_2017 <- wm_idw_2017 %>% \n  transmute(gi_star = local_gstar_perm(no_cases, nb, wt, nsim = 199)) %>% \n  tidyr::unnest(gi_star)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\nLastly, we classify the clusters using a combination of [`mutate()`](https://dplyr.tidyverse.org/reference/mutate.html) and [`case_when()`](https://dplyr.tidyverse.org/reference/case_when.html) which is then piped into a ggplot map. While not a perfect recreation of the GeoDa map, it is very close—the differences likely due to conditional permutation (see [conditional permutation vignette](https://sfdep.josiahparry.com/articles/conditional-permutation) for more on significance calculation).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncases_gistar_2017 %>% \n  mutate(cluster = case_when(\n    p_folded_sim > 0.05 ~ \"Not Significant\",\n    p_folded_sim <= 0.05 & gi_star < 0 ~ \"Low\",\n    p_folded_sim <= 0.05 & gi_star > 0 ~ \"High\"\n  )) |> \n  ggplot(aes(fill = cluster)) +\n  geom_sf(lwd = 0.2, color = \"black\") +\n  scale_fill_manual(values = c(\"High\" = \"red\",\n                               \"Low\" = \"Blue\", \n                               \"Not Significant\" = \"white\")) +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-53-1.png){width=672}\n:::\n:::\n\n\n\nIndeed the High cluster and low cluster is similar to what we see in our LISA map.\n\n## Conclusion\n\nThis take home exercise has taught me about spatial autocorrelation and how although something looks one way. The values calculated could mean some sort statistical significance. This take home also taught me how to be cautious and that the data set provided only is not always ready to use when downloaded shown by the spelling error.\n\nAs for the actual data itself, it shows that there are certain hotspots for the drug abuses and how it affects neighbouring provinces. But it also does not necessarily stay there throughout for all 6 years but it shifts around. This could be that they are trying to avoid the police and trying to relocate so that they are harder to track but who knows. However it is still unclear on how the drug cases arise as the provinces that it appears on is rather random. As seen from the provinces that drug cases arises from 2020-2022\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}