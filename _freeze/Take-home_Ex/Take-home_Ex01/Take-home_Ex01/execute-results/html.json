{
  "hash": "1d87698b0fa0f8f6c4bdcc5e317ebf91",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-Home Exercise 1\"\nauthor: \"Kwee Cheng\"\ndate: \"September 14, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\ncategories: [Take-Home, Code]\n---\n\n\n## Background\n\nMillions of people have their lives shattered by armed conflict – wars – every year.\n\nArmed conflict has been on the rise since about 2012, after a decline in the 1990s and early 2000s. First came conflicts in Libya, Syria and Yemen, triggered by the 2011 Arab uprisings. Libya’s instability spilled south, helping set off a protracted crisis in the Sahel region. A fresh wave of major combat followed: the 2020 Azerbaijani-Armenian war over the Nagorno-Karabakh enclave, horrific fighting in Ethiopia’s northern Tigray region that began weeks later, the conflict prompted by the Myanmar army’s 2021 power grab and Russia’s 2022 assault on Ukraine. Add to those 2023’s devastation in Sudan and Gaza. Around the globe, more people are dying in fighting, being forced from their homes or in need of life-saving aid than in decades.\n\n## Objectives\n\nGeospatial analytics hold tremendous potential to address complex problems facing society. In this study, you are tasked to apply spatial point patterns analysis methods to discover the spatial and spatio-temporal distribution of armed conflict in Myanmar\n\n## Dataset\n\nArmed conflict data of Myanmar between 2021-2024 from [Armed Conflict Location & Event Data (ACLED)](https://acleddata.com/)\n\n[Geospatial data](http://geonode.themimu.info/layers/?limit=100&offset=0) on [Myanmar Information Management Unit, MIMU](http://www.themimu.info/)\n\n[OpenStreetMap](https://download.geofabrik.de/asia/myanmar.html) of Myanmar\n\n## Packages\n\nMost of the packages used are what is taught in class:\n\n-   **sf (Simple Features)**: Provides tools for working with spatial vector data (points, lines, polygons) using simple features, a standardized way to store and process spatial data.\n\n-   **raster**: Handles spatial raster data (grids, images, or maps) and allows reading, writing, manipulating, and analyzing raster datasets.\n\n-   **spatstat**: Focuses on spatial point pattern analysis. It provides tools for analyzing and modeling the spatial distribution of points, like trees or crime locations.\n\n-   **tmap**: A visualization package for thematic maps. It makes creating static and interactive maps using spatial data intuitive, supporting both raster and vector data.\n\n-   **tidyverse**: A collection of packages designed for data manipulation, exploration, and visualization using a consistent syntax (e.g., **ggplot2**, **dplyr**, **tidyr**). It’s not specifically for spatial data but is often used in combination with spatial packages for data wrangling.\n\n-   **sparr**: Used for kernel density estimation and analysis of spatial point patterns, particularly for risk estimation and spatio temporal analysis.\n\n-   **sp**: Provides classes and methods for handling and analyzing spatial data in both vector and raster formats. It's the predecessor to **sf** and **raster**, widely used before **sf** became the preferred package for vector data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, raster, spatstat, tmap, tidyverse,sparr,sp)\n```\n:::\n\n\n## Import the Data\n\n### Aspatial Data\n\nFirst step would be to import the armed conflict data which is in csv format, *st_read* will be used to read the csv file. In addition we are creating an additional column quarter, since we would need to know which quarter does an entry belong to. Luckily for us we can easily use *quarter* function on the event_date to know which quarter it belongs to. This package is found in **lubridate** package which is loaded in together with **tidyverse**. Note we have converted the CRS to Myanmar's CRS at this point.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled_sf <- st_read(\"data/ACLED_Myanmar.csv\") %>%\n  st_as_sf(coords = c(\n    \"longitude\", \"latitude\"),\n    crs=4326) %>%\n  st_transform(crs = 32647) %>%\n  mutate(event_date = dmy(event_date),quarter = quarter(event_date))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `ACLED_Myanmar' from data source \n  `C:\\SMU\\Y4S1\\IS415\\IS415\\Take-home_Ex\\Take-home_Ex01\\data\\ACLED_Myanmar.csv' \n  using driver `CSV'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: no simple feature geometries present: returning a data.frame or tbl_df\n```\n\n\n:::\n:::\n\n\nNext I would like to split up the *acled_sf* into chucks for easier management of the data. I will split the data into chunks separating them by the different years 2021, 2022, 2023, 2024.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled_sf_2021 <- acled_sf %>%\n  filter(year == 2021)\n\nacled_sf_2022 <- acled_sf %>%\n  filter(year == 2022)\n\nacled_sf_2023 <- acled_sf %>%\n  filter(year == 2023)\n\nacled_sf_2024 <- acled_sf %>%\n  filter(year == 2024)\n```\n:::\n\n\n### Spatial Data\n\nNext is to import the boundary data of Myanmar, likewise *st_read* will be used. Note we have converted the CRS to Myanmars CRS at this point.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmyanmar_sf <- st_read(dsn=\"data/\",layer = \"mmr_polbnda2_adm1_250k_mimu_1\") %>%\n  st_transform(crs=32647)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `mmr_polbnda2_adm1_250k_mimu_1' from data source \n  `C:\\SMU\\Y4S1\\IS415\\IS415\\Take-home_Ex\\Take-home_Ex01\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 18 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.1721 ymin: 9.696844 xmax: 101.17 ymax: 28.54554\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmyanmar_sf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 18 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -210008.6 ymin: 1072026 xmax: 724647.6 ymax: 3158467\nProjected CRS: WGS 84 / UTM zone 47N\nFirst 10 features:\n   OBJECTID          ST ST_PCODE  ST_RG               ST_MMR PCode_V\n1         1  Ayeyarwady   MMR017 Region       ဧရာဝတီတိုင်းဒေသကြီး     9.4\n2         2 Bago (East)   MMR007 Region   ပဲခူးတိုင်းဒေသကြီး (အရှေ့)     9.4\n3         3 Bago (West)   MMR008 Region ပဲခူးတိုင်းဒေသကြီး (အနောက်)     9.4\n4         4        Chin   MMR004  State            ချင်းပြည်နယ်     9.4\n5         5      Kachin   MMR001  State            ကချင်ပြည်နယ်     9.4\n6         6       Kayah   MMR002  State            ကယားပြည်နယ်     9.4\n7         7       Kayin   MMR003  State             ကရင်ပြည်နယ်     9.4\n8         8      Magway   MMR009 Region        မကွေးတိုင်းဒေသကြီး     9.4\n9         9    Mandalay   MMR010 Region      မန္တလေးတိုင်းဒေသကြီး     9.4\n10       10         Mon   MMR011  State              မွန်ပြည်နယ်     9.4\n                         geometry\n1  MULTIPOLYGON (((93411.72 17...\n2  MULTIPOLYGON (((203949.9 21...\n3  MULTIPOLYGON (((153405.1 21...\n4  MULTIPOLYGON (((-72918.03 2...\n5  MULTIPOLYGON (((362696.3 31...\n6  MULTIPOLYGON (((309155.7 22...\n7  MULTIPOLYGON (((373551.3 18...\n8  MULTIPOLYGON (((-1717.607 2...\n9  MULTIPOLYGON (((208184.3 26...\n10 MULTIPOLYGON (((364238.4 16...\n```\n\n\n:::\n:::\n\n\nLooking at the data the only columns that seem interesting to me are *OBJECTID, ST, ST_RG* and *geometry,* so I will be only extracting those columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmyanmar_sf <- myanmar_sf %>% select('OBJECTID', 'ST', 'ST_RG', 'geometry')\nsummary(myanmar_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    OBJECTID          ST               ST_RG                    geometry \n Min.   : 1.00   Length:18          Length:18          MULTIPOLYGON :18  \n 1st Qu.: 5.25   Class :character   Class :character   epsg:32647   : 0  \n Median : 9.50   Mode  :character   Mode  :character   +proj=utm ...: 0  \n Mean   : 9.50                                                           \n 3rd Qu.:13.75                                                           \n Max.   :18.00                                                           \n```\n\n\n:::\n:::\n\n\n### **OpenStreetMap**\n\nNext is to import the OpenStreetMap of Myanmar *st_read* is used again\n\n\n::: {.cell}\n\n```{.r .cell-code}\nosm = st_read(\"data/myanmar_osm.shp.zip\", layer=\"gis_osm_roads_free_1\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `gis_osm_roads_free_1' from data source \n  `C:\\SMU\\Y4S1\\IS415\\IS415\\Take-home_Ex\\Take-home_Ex01\\data\\myanmar_osm.shp.zip' \n  using driver `ESRI Shapefile'\nSimple feature collection with 558412 features and 10 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 92.13721 ymin: 9.783255 xmax: 101.2285 ymax: 28.37868\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n## Data Wrangling\n\n### CRS check\n\nFirst would be to check that *acled_sf* and *myanmar_sf* are in the correct projected system after crs transformation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(acled_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(acled_sf_2021)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(acled_sf_2022)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(acled_sf_2023)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(acled_sf_2024)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(myanmar_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]\n```\n\n\n:::\n:::\n\n\n### OpenStreetMap\n\nWorking with OpenStreetMap is something different as there were no in class tutorials on this, and in a sense its not really traditional GIS data as its all store in one big database. First step is to see what fields there is.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nosm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 558412 features and 10 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 92.13721 ymin: 9.783255 xmax: 101.2285 ymax: 28.37868\nGeodetic CRS:  WGS 84\nFirst 10 features:\n    osm_id code       fclass              name  ref oneway maxspeed layer\n1  4360720 5113      primary         ကမ်းနားလမ်း <NA>      F       50     0\n2  4360721 5114    secondary San Da Koo Street <NA>      B        0     0\n3  4360722 5121 unclassified              <NA> <NA>      B        0     0\n4  4360723 5113      primary        မဟာဗန္ဓုလလမ်း <NA>      F       50     0\n5  4360725 5113      primary   Min Nandar Road <NA>      B       70     0\n6  4360727 5113      primary Maha Bandula Road <NA>      F        0     0\n7  4360728 5114    secondary              <NA> <NA>      F        0     0\n8  4360731 5113      primary        မဟာဗန္ဓုလလမ်း <NA>      F        0     0\n9  4360732 5114    secondary            စက်ရုံလမ်း <NA>      F        0     0\n10 4361462 5122  residential  Man Daing Street <NA>      B       20     0\n   bridge tunnel                       geometry\n1       F      F LINESTRING (96.14182 16.774...\n2       F      F LINESTRING (96.17792 16.769...\n3       F      F LINESTRING (96.17826 16.775...\n4       F      F LINESTRING (96.16004 16.774...\n5       F      F LINESTRING (96.19497 16.804...\n6       F      F LINESTRING (96.18572 16.782...\n7       F      F LINESTRING (96.18465 16.782...\n8       F      F LINESTRING (96.18582 16.782...\n9       F      F LINESTRING (96.17552 16.790...\n10      F      F LINESTRING (96.18204 16.782...\n```\n\n\n:::\n:::\n\n\nThe interesting fields to me are osm_id and fclass, in one of the fclass entries it says residential which could be useful in plotting and distinguish where the conflicts take place. Looking into [osm documentation](https://www.geofabrik.de/data/geofabrik-osm-gis-standard-0.3.pdf), osm_id might not be useful for me, but for fclass there are many features some of the examples below. So lets expand on the fclass.![](images/clipboard-1644116504.png)\n\n![](images/clipboard-360332407.png)\n\n![](images/clipboard-2041218185.png)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(osm$fclass)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"primary\"        \"secondary\"      \"unclassified\"   \"residential\"   \n [5] \"trunk_link\"     \"primary_link\"   \"tertiary\"       \"service\"       \n [9] \"footway\"        \"track\"          \"trunk\"          \"path\"          \n[13] \"living_street\"  \"track_grade4\"   \"secondary_link\" \"unknown\"       \n[17] \"track_grade5\"   \"motorway\"       \"steps\"          \"track_grade2\"  \n[21] \"track_grade1\"   \"track_grade3\"   \"tertiary_link\"  \"motorway_link\" \n[25] \"pedestrian\"     \"cycleway\"       \"bridleway\"     \n```\n\n\n:::\n:::\n\n\nDue to the overwhelming size of the osm file and after reading the documentation I decided to keep a few of the interesting ones that could be helpful in my analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroads <- c(\"primary\", \"secondary\", \"residential\", \"trunk_link\", \"primary_link\", \"tertiary\", \"footway\", \"trunk\", \"secondary_link\", \"tertiary_link\")\n\nosm <- osm[osm$fclass %in% roads, ]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nosm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 277773 features and 10 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 92.13721 ymin: 9.94157 xmax: 101.1935 ymax: 28.0503\nGeodetic CRS:  WGS 84\nFirst 10 features:\n    osm_id code      fclass                 name  ref oneway maxspeed layer\n1  4360720 5113     primary            ကမ်းနားလမ်း <NA>      F       50     0\n2  4360721 5114   secondary    San Da Koo Street <NA>      B        0     0\n4  4360723 5113     primary           မဟာဗန္ဓုလလမ်း <NA>      F       50     0\n5  4360725 5113     primary      Min Nandar Road <NA>      B       70     0\n6  4360727 5113     primary    Maha Bandula Road <NA>      F        0     0\n7  4360728 5114   secondary                 <NA> <NA>      F        0     0\n8  4360731 5113     primary           မဟာဗန္ဓုလလမ်း <NA>      F        0     0\n9  4360732 5114   secondary               စက်ရုံလမ်း <NA>      F        0     0\n10 4361462 5122 residential     Man Daing Street <NA>      B       20     0\n11 4361463 5122 residential Seik Kan Thar Street <NA>      B        0     0\n   bridge tunnel                       geometry\n1       F      F LINESTRING (96.14182 16.774...\n2       F      F LINESTRING (96.17792 16.769...\n4       F      F LINESTRING (96.16004 16.774...\n5       F      F LINESTRING (96.19497 16.804...\n6       F      F LINESTRING (96.18572 16.782...\n7       F      F LINESTRING (96.18465 16.782...\n8       F      F LINESTRING (96.18582 16.782...\n9       F      F LINESTRING (96.17552 16.790...\n10      F      F LINESTRING (96.18204 16.782...\n11      F      F LINESTRING (96.18182 16.782...\n```\n\n\n:::\n:::\n\n\nLet's select only the useful columns that are interest of us, which is fclass, but let's keep osm_id in case it there is a use case for it despite it having duplicates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nosm <- osm %>% select('osm_id', 'fclass')\n```\n:::\n\n\nThe number of features have been greatly reduced, also before forgetting let's transform osm CRS to Myanmars like for the previous 2 dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nosm <- st_transform(osm, crs = 32647)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(osm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmerged_myanmar <- st_union(myanmar_sf)\nosm_myanmar <- st_intersection(osm, merged_myanmar)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(osm_myanmar)\n```\n:::\n\n\nThere are some geometry in osm that is saved as MULTILINESTRING which could caused problems with KDE calculation, so let's split it into individual LINESTRING\n\n\n::: {.cell}\n\n```{.r .cell-code}\nosm_myanmar <- st_cast(st_cast(osm_myanmar, \"MULTILINESTRING\"),\"LINESTRING\")\nsummary(osm_myanmar)\n```\n:::\n\n\nLet's save this data this data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(osm_myanmar, \"data/rds/osm_myanmar.rds\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n### PPP object\n\nLet's prepare to calculating the KDE by converting them into PPP objects\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled_2021_Q1_ppp <- acled_sf_2021 %>% filter(quarter == 1) %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_2021_Q2_ppp <- acled_sf_2021 %>% filter(quarter == 2) %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_2021_Q3_ppp <- acled_sf_2021 %>% filter(quarter == 3) %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_2021_Q4_ppp <- acled_sf_2021 %>% filter(quarter == 4) %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_2022_Q1_ppp <- acled_sf_2022 %>% filter(quarter == 1) %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_2022_Q2_ppp <- acled_sf_2022 %>% filter(quarter == 2) %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_2022_Q3_ppp <- acled_sf_2022 %>% filter(quarter == 3) %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_2022_Q4_ppp <- acled_sf_2022 %>% filter(quarter == 4) %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_2023_Q1_ppp <- acled_sf_2023 %>% filter(quarter == 1) %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_2023_Q2_ppp <- acled_sf_2023 %>% filter(quarter == 2) %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_2023_Q3_ppp <- acled_sf_2023 %>% filter(quarter == 3) %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_2023_Q4_ppp <- acled_sf_2023 %>% filter(quarter == 4) %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_2024_Q1_ppp <- acled_sf_2024 %>% filter(quarter == 1) %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_2024_Q2_ppp <- acled_sf_2024 %>% filter(quarter == 2) %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n:::\n\n\nIt gives us warnings about duplicated points so let's remove them\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled_2021_Q1_ppp <- rjitter(acled_2021_Q1_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_2021_Q2_ppp <- rjitter(acled_2021_Q2_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_2021_Q3_ppp <- rjitter(acled_2021_Q3_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_2021_Q4_ppp <- rjitter(acled_2021_Q4_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_2022_Q1_ppp <- rjitter(acled_2022_Q1_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_2022_Q2_ppp <- rjitter(acled_2022_Q2_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_2022_Q3_ppp <- rjitter(acled_2022_Q3_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_2022_Q4_ppp <- rjitter(acled_2022_Q4_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_2023_Q1_ppp <- rjitter(acled_2023_Q1_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_2023_Q2_ppp <- rjitter(acled_2023_Q2_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_2023_Q3_ppp <- rjitter(acled_2023_Q3_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_2023_Q4_ppp <- rjitter(acled_2023_Q4_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_2024_Q1_ppp <- rjitter(acled_2024_Q1_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_2024_Q2_ppp <- rjitter(acled_2024_Q2_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n```\n:::\n\n\nLet's double check again to see if there are any duplicates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nany(duplicated(acled_2021_Q1_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_2021_Q2_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_2021_Q3_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_2021_Q4_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_2022_Q1_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_2022_Q2_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_2022_Q3_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_2022_Q4_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_2023_Q1_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_2023_Q2_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_2023_Q3_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_2023_Q4_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_2024_Q1_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_2024_Q2_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\nLet's create an OWIN object of Myanmar\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmyanmar_owin <- as.owin(myanmar_sf)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(myanmar_owin)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\nThen let's extract the different conflict events into the Myanmar owin object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacledMyanmar_ppp_2021_Q1 = acled_2021_Q1_ppp[myanmar_owin]\nacledMyanmar_ppp_2021_Q2 = acled_2021_Q2_ppp[myanmar_owin]\nacledMyanmar_ppp_2021_Q3 = acled_2021_Q3_ppp[myanmar_owin]\nacledMyanmar_ppp_2021_Q4 = acled_2021_Q4_ppp[myanmar_owin]\nacledMyanmar_ppp_2022_Q1 = acled_2022_Q1_ppp[myanmar_owin]\nacledMyanmar_ppp_2022_Q2 = acled_2022_Q2_ppp[myanmar_owin]\nacledMyanmar_ppp_2022_Q3 = acled_2022_Q3_ppp[myanmar_owin]\nacledMyanmar_ppp_2022_Q4 = acled_2022_Q4_ppp[myanmar_owin]\nacledMyanmar_ppp_2023_Q1 = acled_2023_Q1_ppp[myanmar_owin]\nacledMyanmar_ppp_2023_Q2 = acled_2023_Q2_ppp[myanmar_owin]\nacledMyanmar_ppp_2023_Q3 = acled_2023_Q3_ppp[myanmar_owin]\nacledMyanmar_ppp_2023_Q4 = acled_2023_Q4_ppp[myanmar_owin]\nacledMyanmar_ppp_2024_Q1 = acled_2024_Q1_ppp[myanmar_owin]\nacledMyanmar_ppp_2024_Q2 = acled_2024_Q2_ppp[myanmar_owin]\n```\n:::\n\n\nLet's simply plot for this year 2024 to see what we have, not much can be seen on where most of the conflicts take place.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(acledMyanmar_ppp_2024_Q1)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(acledMyanmar_ppp_2024_Q2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-27-2.png){width=672}\n:::\n:::\n\n\n## Quarterly KDE\n\nLet's actually calculate the quarterly KDE for the different years now. First we would rescale the PPP into KM\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacledMyanmar_ppp_2021_Q1.km <- rescale.ppp(acledMyanmar_ppp_2021_Q1, 1000, \"km\")\nacledMyanmar_ppp_2021_Q2.km <- rescale.ppp(acledMyanmar_ppp_2021_Q2, 1000, \"km\")\nacledMyanmar_ppp_2021_Q3.km <- rescale.ppp(acledMyanmar_ppp_2021_Q3, 1000, \"km\")\nacledMyanmar_ppp_2021_Q4.km <- rescale.ppp(acledMyanmar_ppp_2021_Q4, 1000, \"km\")\nacledMyanmar_ppp_2022_Q1.km <- rescale.ppp(acledMyanmar_ppp_2022_Q1, 1000, \"km\")\nacledMyanmar_ppp_2022_Q2.km <- rescale.ppp(acledMyanmar_ppp_2022_Q2, 1000, \"km\")\nacledMyanmar_ppp_2022_Q3.km <- rescale.ppp(acledMyanmar_ppp_2022_Q3, 1000, \"km\")\nacledMyanmar_ppp_2022_Q4.km <- rescale.ppp(acledMyanmar_ppp_2022_Q4, 1000, \"km\")\nacledMyanmar_ppp_2023_Q1.km <- rescale.ppp(acledMyanmar_ppp_2023_Q1, 1000, \"km\")\nacledMyanmar_ppp_2023_Q2.km <- rescale.ppp(acledMyanmar_ppp_2023_Q2, 1000, \"km\")\nacledMyanmar_ppp_2023_Q3.km <- rescale.ppp(acledMyanmar_ppp_2023_Q3, 1000, \"km\")\nacledMyanmar_ppp_2023_Q4.km <- rescale.ppp(acledMyanmar_ppp_2023_Q4, 1000, \"km\")\nacledMyanmar_ppp_2024_Q1.km <- rescale.ppp(acledMyanmar_ppp_2024_Q1, 1000, \"km\")\nacledMyanmar_ppp_2024_Q2.km <- rescale.ppp(acledMyanmar_ppp_2024_Q2, 1000, \"km\")\n```\n:::\n\n\nNow we can plot the KDE, lets do it for Q1 of 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconflict.bw <- density(acledMyanmar_ppp_2021_Q1.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\")\nplot(conflict.bw)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\nThe map seems a bit dark, so I wanted to try other automatic sigma methods\n\n::: panel-tabset\n### bw.CvL\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconflict.bw <- density(acledMyanmar_ppp_2021_Q1.km, \n             sigma=bw.CvL, \n             edge=TRUE, \n             kernel=\"gaussian\")\nplot(conflict.bw)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n### bw.ppl\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconflict.bw <- density(acledMyanmar_ppp_2021_Q1.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"gaussian\")\nplot(conflict.bw)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n### bw.scott\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconflict.bw <- density(acledMyanmar_ppp_2021_Q1.km, \n             sigma=bw.scott, \n             edge=TRUE, \n             kernel=\"gaussian\")\nplot(conflict.bw)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n:::\n\nLet's try declaring our own sigma value\n\n::: panel-tabset\n### Sigma value 20\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconflict.bw <- density(acledMyanmar_ppp_2021_Q1.km, \n             sigma=20, \n             edge=TRUE, \n             kernel=\"gaussian\")\nplot(conflict.bw)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n### Sigma Value 25\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconflict.bw <- density(acledMyanmar_ppp_2021_Q1.km, \n             sigma=25, \n             edge=TRUE, \n             kernel=\"gaussian\")\nplot(conflict.bw)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n### Sigma Value 30\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconflict.bw <- density(acledMyanmar_ppp_2021_Q1.km, \n             sigma=30, \n             edge=TRUE, \n             kernel=\"gaussian\")\nplot(conflict.bw)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n:::\n\nUltimately I think i will settle for sigma value of 25 and it seems to give the best results without over emphasizing the results.\n\nLet's plot the quarterly KDE for the different years now\n\n::: panel-tabset\n### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(2,2), cex.main = 3.5)\nplot(density(acledMyanmar_ppp_2021_Q1.km, \n             sigma=25, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"2021 Q1\")\nplot(density(acledMyanmar_ppp_2021_Q2.km, \n             sigma=25, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"2021 Q2\")\nplot(density(acledMyanmar_ppp_2021_Q3.km, \n             sigma=25, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"2021 Q3\")\nplot(density(acledMyanmar_ppp_2021_Q4.km, \n             sigma=25, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"2021 Q4\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-36-1.png){width=1920}\n:::\n:::\n\n\n### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(2,2), cex.main = 3.5)\nplot(density(acledMyanmar_ppp_2022_Q1.km, \n             sigma=25, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"2022 Q1\")\nplot(density(acledMyanmar_ppp_2022_Q2.km, \n             sigma=25, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"2022 Q2\")\nplot(density(acledMyanmar_ppp_2022_Q3.km, \n             sigma=25, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"2022 Q3\")\nplot(density(acledMyanmar_ppp_2022_Q4.km, \n             sigma=25, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"2022 Q4\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-37-1.png){width=1920}\n:::\n:::\n\n\n### 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(2,2), cex.main = 3.5)\nplot(density(acledMyanmar_ppp_2023_Q1.km, \n             sigma=25, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"2023 Q1\")\nplot(density(acledMyanmar_ppp_2023_Q2.km, \n             sigma=25, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"2023 Q2\")\nplot(density(acledMyanmar_ppp_2023_Q3.km, \n             sigma=25, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"2023 Q3\")\nplot(density(acledMyanmar_ppp_2023_Q4.km, \n             sigma=25, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"2023 Q4\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-38-1.png){width=1920}\n:::\n:::\n\n\n### 2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(1,2), cex.main = 3.5)\nplot(density(acledMyanmar_ppp_2024_Q1.km, \n             sigma=25, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"2024 Q1\")\nplot(density(acledMyanmar_ppp_2024_Q2.km, \n             sigma=25, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"2024 Q2\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-39-1.png){width=1920}\n:::\n:::\n\n:::\n\n## **Second-order Spatial Point Patterns Analysis**\n\n### Scoped down owin object\n\nBased on the derived KDEs there is a lot of activities in the middle of Myanmar and according to <https://www.citypopulation.de/en/myanmar/cities/>\n\n![](images/clipboard-2705191895.png)\n\nMandalay is one of the highest population so let's focus on it and it happens to be in our *myanmar_sf* boundary.\n\nLet's filter to only get Madalay out of our *myanmar_sf*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmandalay <- myanmar_sf %>%\n  filter(ST == \"Mandalay\")\n```\n:::\n\n\nLet's create a owin object out of mandalay\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmandalay_owin = as.owin(mandalay)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(mandalay_owin)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n\n### PPP object\n\nBefore converting the *acled_sf* into a ppp object, I would like to split up the data further to focus on four main event types: battles, explosion/remote violence, strategic developments, violence against civilians. Also further splitting it by the different years. Because by not doing this and performing 2nd order analysis we don't know which are the events that are clustered or random dispersed. Also doing it for all the 4 years worth of data its bound to be clustered\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled_ppp_battles_2021 <- acled_sf_2021 %>% filter(event_type == \"Battles\") %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_ppp_battles_2022 <- acled_sf_2022 %>% filter(event_type == \"Battles\") %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_ppp_battles_2023 <- acled_sf_2023 %>% filter(event_type == \"Battles\") %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_ppp_battles_2024 <- acled_sf_2024 %>% filter(event_type == \"Battles\") %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_ppp_explosion_2021 <- acled_sf_2021 %>% filter(event_type == \"Explosions/Remote violence\") %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_ppp_explosion_2022 <- acled_sf_2022 %>% filter(event_type == \"Explosions/Remote violence\") %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_ppp_explosion_2023 <- acled_sf_2023 %>% filter(event_type == \"Explosions/Remote violence\") %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_ppp_explosion_2024 <- acled_sf_2024 %>% filter(event_type == \"Explosions/Remote violence\") %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_ppp_strat_2021 <- acled_sf_2021 %>% filter(event_type == \"Strategic developments\") %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_ppp_strat_2022 <- acled_sf_2022 %>% filter(event_type == \"Strategic developments\") %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_ppp_strat_2023 <- acled_sf_2023 %>% filter(event_type == \"Strategic developments\") %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_ppp_strat_2024 <- acled_sf_2024 %>% filter(event_type == \"Strategic developments\") %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_ppp_violence_2021 <- acled_sf_2021 %>% filter(event_type == \"Violence against civilians\") %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_ppp_violence_2022 <- acled_sf_2022 %>% filter(event_type == \"Violence against civilians\") %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_ppp_violence_2023 <- acled_sf_2023 %>% filter(event_type == \"Violence against civilians\") %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n\n```{.r .cell-code}\nacled_ppp_violence_2024 <- acled_sf_2024 %>% filter(event_type == \"Violence against civilians\") %>% {as.ppp(st_coordinates(.),st_bbox(.))}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: data contain duplicated points\n```\n\n\n:::\n:::\n\n\nSince it gives us warnings of duplicated data let's remove them\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled_ppp_battles_2021 <- rjitter(acled_ppp_battles_2021, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_ppp_battles_2022 <- rjitter(acled_ppp_battles_2022, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_ppp_battles_2023 <- rjitter(acled_ppp_battles_2023, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_ppp_battles_2024 <- rjitter(acled_ppp_battles_2024, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\nacled_ppp_explosion_2021 <- rjitter(acled_ppp_explosion_2021, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_ppp_explosion_2022 <- rjitter(acled_ppp_explosion_2022, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_ppp_explosion_2023 <- rjitter(acled_ppp_explosion_2023, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_ppp_explosion_2024 <- rjitter(acled_ppp_explosion_2024, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\nacled_ppp_strat_2021 <- rjitter(acled_ppp_strat_2021, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_ppp_strat_2022 <- rjitter(acled_ppp_strat_2022, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_ppp_strat_2023 <- rjitter(acled_ppp_strat_2023, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_ppp_strat_2024 <- rjitter(acled_ppp_strat_2024, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\nacled_ppp_violence_2021 <- rjitter(acled_ppp_violence_2021, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_ppp_violence_2022 <- rjitter(acled_ppp_violence_2022, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_ppp_violence_2023 <- rjitter(acled_ppp_violence_2023, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nacled_ppp_violence_2024 <- rjitter(acled_ppp_violence_2024, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nany(duplicated(acled_ppp_battles_2021))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_ppp_battles_2022))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_ppp_battles_2023))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_ppp_battles_2024))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_ppp_explosion_2021))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_ppp_explosion_2022))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_ppp_explosion_2023))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_ppp_explosion_2024))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_ppp_strat_2021))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_ppp_strat_2022))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_ppp_strat_2023))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_ppp_strat_2024))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_ppp_violence_2021))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_ppp_violence_2022))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_ppp_violence_2023))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(acled_ppp_violence_2024))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\nGreat there's no more duplicates, next let's combine the ppp object by event types with the mandalay owin that we have created\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacledMyanmar_ppp_mandalay_battles_2021 = acled_ppp_battles_2021[mandalay_owin]\nacledMyanmar_ppp_mandalay_battles_2022 = acled_ppp_battles_2022[mandalay_owin]\nacledMyanmar_ppp_mandalay_battles_2023 = acled_ppp_battles_2023[mandalay_owin]\nacledMyanmar_ppp_mandalay_battles_2024 = acled_ppp_battles_2024[mandalay_owin]\n\n\nacledMyanmar_ppp_mandalay_explosion_2021 = acled_ppp_explosion_2021[mandalay_owin]\nacledMyanmar_ppp_mandalay_explosion_2022 = acled_ppp_explosion_2022[mandalay_owin]\nacledMyanmar_ppp_mandalay_explosion_2023 = acled_ppp_explosion_2023[mandalay_owin]\nacledMyanmar_ppp_mandalay_explosion_2024 = acled_ppp_explosion_2024[mandalay_owin]\n\nacledMyanmar_ppp_mandalay_strat_2021 = acled_ppp_strat_2021[mandalay_owin]\nacledMyanmar_ppp_mandalay_strat_2022 = acled_ppp_strat_2022[mandalay_owin]\nacledMyanmar_ppp_mandalay_strat_2023 = acled_ppp_strat_2023[mandalay_owin]\nacledMyanmar_ppp_mandalay_strat_2024 = acled_ppp_strat_2024[mandalay_owin]\n\nacledMyanmar_ppp_mandalay_violence_2021 = acled_ppp_violence_2021[mandalay_owin]\nacledMyanmar_ppp_mandalay_violence_2022 = acled_ppp_violence_2021[mandalay_owin]\nacledMyanmar_ppp_mandalay_violence_2023 = acled_ppp_violence_2021[mandalay_owin]\nacledMyanmar_ppp_mandalay_violence_2024 = acled_ppp_violence_2021[mandalay_owin]\n```\n:::\n\n\nI will be using G function for my 2nd Order Analysis as it could help to determine clustering tendencies.\n\n#### Battles\n\n::: panel-tabset\n### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_battles_2021 = Gest(acledMyanmar_ppp_mandalay_battles_2021, correction = \"border\")\nplot(G_battles_2021, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n\n### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_battles_2022 = Gest(acledMyanmar_ppp_mandalay_battles_2022, correction = \"border\")\nplot(G_battles_2022, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n\n### 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_battles_2023 = Gest(acledMyanmar_ppp_mandalay_battles_2023, correction = \"border\")\nplot(G_battles_2023, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-49-1.png){width=672}\n:::\n:::\n\n\n### 2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_battles_2024 = Gest(acledMyanmar_ppp_mandalay_battles_2024, correction = \"border\")\nplot(G_battles_2024, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-50-1.png){width=672}\n:::\n:::\n\n:::\n\n#### Explosion/Remote Violence\n\n::: panel-tabset\n### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_explosion_2021 = Gest(acledMyanmar_ppp_mandalay_explosion_2021, correction = \"border\")\nplot(G_explosion_2021, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-51-1.png){width=672}\n:::\n:::\n\n\n### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_explosion_2022 = Gest(acledMyanmar_ppp_mandalay_explosion_2022, correction = \"border\")\nplot(G_explosion_2022, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-52-1.png){width=672}\n:::\n:::\n\n\n### 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_explosion_2023 = Gest(acledMyanmar_ppp_mandalay_explosion_2023, correction = \"border\")\nplot(G_explosion_2023, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-53-1.png){width=672}\n:::\n:::\n\n\n### 2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_explosion_2024 = Gest(acledMyanmar_ppp_mandalay_explosion_2024, correction = \"border\")\nplot(G_explosion_2024, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n:::\n\n:::\n\n#### Strategic Developments\n\n::: panel-tabset\n### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_strat_2021 = Gest(acledMyanmar_ppp_mandalay_strat_2021, correction = \"border\")\nplot(G_strat_2021, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-55-1.png){width=672}\n:::\n:::\n\n\n### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_strat_2022 = Gest(acledMyanmar_ppp_mandalay_strat_2022, correction = \"border\")\nplot(G_strat_2022, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-56-1.png){width=672}\n:::\n:::\n\n\n### 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_strat_2023 = Gest(acledMyanmar_ppp_mandalay_strat_2023, correction = \"border\")\nplot(G_strat_2023, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-57-1.png){width=672}\n:::\n:::\n\n\n### 2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_strat_2024 = Gest(acledMyanmar_ppp_mandalay_strat_2024, correction = \"border\")\nplot(G_strat_2024, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-58-1.png){width=672}\n:::\n:::\n\n:::\n\n#### Violence against civilians\n\n::: panel-tabset\n### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_violence_2021 = Gest(acledMyanmar_ppp_mandalay_violence_2021, correction = \"border\")\nplot(G_violence_2021, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-59-1.png){width=672}\n:::\n:::\n\n\n### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_violence_2022 = Gest(acledMyanmar_ppp_mandalay_violence_2022, correction = \"border\")\nplot(G_violence_2022, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-60-1.png){width=672}\n:::\n:::\n\n\n### 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_violence_2023 = Gest(acledMyanmar_ppp_mandalay_violence_2023, correction = \"border\")\nplot(G_violence_2023, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-61-1.png){width=672}\n:::\n:::\n\n\n### 2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_violence_2024 = Gest(acledMyanmar_ppp_mandalay_violence_2024, correction = \"border\")\nplot(G_violence_2024, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-62-1.png){width=672}\n:::\n:::\n\n:::\n\n### Performing Complete Spatial Randomness Test\n\nTo see if the the different event types are cluster or randomly dispersed. The hypothesis and test are as follows:\n\nHo = The distribution of a certain event at Mandalay region are randomly distributed.\n\nH1 = The distribution of a certain event at Mandalay region are not randomly distributed.\n\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\n\n#### Battles\n\n::: panel-tabset\n### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_battles_2021.csr <- envelope(acledMyanmar_ppp_mandalay_battles_2021, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(G_battles_2021.csr)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-63-1.png){width=672}\n:::\n:::\n\n\n### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_battles_2022.csr <- envelope(acledMyanmar_ppp_mandalay_battles_2022, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(G_battles_2022.csr)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-64-1.png){width=672}\n:::\n:::\n\n\n### 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_battles_2023.csr <- envelope(acledMyanmar_ppp_mandalay_battles_2023, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(G_battles_2023.csr)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-65-1.png){width=672}\n:::\n:::\n\n\n### 2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_battles_2024.csr <- envelope(acledMyanmar_ppp_mandalay_battles_2024, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(G_battles_2024.csr)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-66-1.png){width=672}\n:::\n:::\n\n:::\n\nFor 2021 and 2022, the points are generally clustered however towards the end there are signs to show that there are some homogeneous distribution with it being in the envelope. For the year 2023 and 2024 it is generally clustered as it falls above the envelope however for 2024 there some points of homogeneous distribution due to it falling inside the envelope.\n\n#### Explosion/Remote violence\n\n::: panel-tabset\n### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_explosion_2021.csr <- envelope(acledMyanmar_ppp_mandalay_explosion_2021, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(G_explosion_2021.csr)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-67-1.png){width=672}\n:::\n:::\n\n\n### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_explosion_2022.csr <- envelope(acledMyanmar_ppp_mandalay_explosion_2022, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(G_explosion_2022.csr)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-68-1.png){width=672}\n:::\n:::\n\n\n### 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_explosion_2023.csr <- envelope(acledMyanmar_ppp_mandalay_explosion_2023, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(G_explosion_2023.csr)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-69-1.png){width=672}\n:::\n:::\n\n\n### 2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_explosion_2024.csr <- envelope(acledMyanmar_ppp_mandalay_explosion_2024, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(G_explosion_2024.csr)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-70-1.png){width=672}\n:::\n:::\n\n:::\n\nFor 2021-2023 it is generally clustered as it fals above the envelope however for 2024 there were some signs of homogeneous distribution where it falls within the envelope however it is still a clustered distribution\n\n#### Strategic Developments\n\n::: panel-tabset\n### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_strat_2021.csr <- envelope(acledMyanmar_ppp_mandalay_strat_2021, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(G_strat_2021.csr)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-71-1.png){width=672}\n:::\n:::\n\n\n### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_strat_2022.csr <- envelope(acledMyanmar_ppp_mandalay_strat_2022, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(G_strat_2022.csr)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-72-1.png){width=672}\n:::\n:::\n\n\n### 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_strat_2023.csr <- envelope(acledMyanmar_ppp_mandalay_strat_2023, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(G_strat_2023.csr)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-73-1.png){width=672}\n:::\n:::\n\n\n### 2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_strat_2024.csr <- envelope(acledMyanmar_ppp_mandalay_strat_2024, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(G_strat_2024.csr)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-74-1.png){width=672}\n:::\n:::\n\n:::\n\nFor all the years it is generally a clustered distribution due to it being above the envelope\n\n#### Violence against civilians\n\n::: panel-tabset\n### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_violence_2021.csr <- envelope(acledMyanmar_ppp_mandalay_violence_2021, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(G_violence_2021.csr)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-75-1.png){width=672}\n:::\n:::\n\n\n### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_violence_2022.csr <- envelope(acledMyanmar_ppp_mandalay_violence_2022, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(G_violence_2022.csr)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-76-1.png){width=672}\n:::\n:::\n\n\n### 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_violence_2023.csr <- envelope(acledMyanmar_ppp_mandalay_violence_2023, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(G_violence_2023.csr)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-77-1.png){width=672}\n:::\n:::\n\n\n### 2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_violence_2024.csr <- envelope(acledMyanmar_ppp_mandalay_violence_2024, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(G_violence_2024.csr)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-78-1.png){width=672}\n:::\n:::\n\n:::\n\nFor all the years it is generally a clustered distribution due to it being above the envelope\n\n### KDE on OpenStreetMap\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_density <- density(acledMyanmar_ppp_2021_Q4.km, \n             sigma=25, \n             edge=TRUE, \n             kernel=\"gaussian\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndensity_raster <- raster(test_density)\nprojection(density_raster) <- CRS(\"+init=EPSG:32647\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(osm_myanmar)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-81-1.png){width=672}\n:::\n:::\n\n\n## KDE insights\n\nA lot of the conflicts that seems to be happening is around the central area of Myanmar and along the outskirts. Some explanations for activities around the central of Myanmar is that the capital city is there, and one of the biggest region in population Madalay is there. As for the outskirt events it could be due to it being the region with the highest population. Interestingly, for the year 2021 there wasn't much conflicts in the first 2 quarters but it slowly got more. Transitioning into 2022 and 2023 where it seems to be the peak of when a lot of conflicts seems to be happening. With the data given as of now for 2024, the amount of conflicts for the Q2 is lesser than Q1.\n\n## **Computing STKDE by quarters**\n\nFor computing STKDE let's split the *acled_sf* data that I have split by the years and selecting the quarter column, as we don't the other other unwanted fields and only the mark field\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconflict_quarter_2021 <- acled_sf_2021 %>% \n  select(quarter)\n\nconflict_quarter_2022 <- acled_sf_2022 %>% \n  select(quarter)\n\nconflict_quarter_2023 <- acled_sf_2023 %>% \n  select(quarter)\n\nconflict_quarter_2024 <- acled_sf_2024 %>% \n  select(quarter)\n```\n:::\n\n\n### PPP object\n\nNext is to convert the different simple frames into ppp objects\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconflict_quarter_ppp_2021 <- as.ppp(conflict_quarter_2021)\n\nconflict_quarter_ppp_2022 <- as.ppp(conflict_quarter_2022)\n\nconflict_quarter_ppp_2023 <- as.ppp(conflict_quarter_2023)\n\nconflict_quarter_ppp_2024 <- as.ppp(conflict_quarter_2024)\n```\n:::\n\n\nLet's check for any duplicates in the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nany(duplicated(conflict_quarter_ppp_2021))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(conflict_quarter_ppp_2022))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(conflict_quarter_ppp_2023))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(conflict_quarter_ppp_2024))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\nSince there are duplicates let's perform jitter to remove them\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconflict_quarter_ppp_2021 <- rjitter(conflict_quarter_ppp_2021, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\nconflict_quarter_ppp_2022 <- rjitter(conflict_quarter_ppp_2022, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\nconflict_quarter_ppp_2023 <- rjitter(conflict_quarter_ppp_2023, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\nconflict_quarter_ppp_2024 <- rjitter(conflict_quarter_ppp_2024, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n```\n:::\n\n\nChecking for duplicates again\n\n\n::: {.cell}\n\n```{.r .cell-code}\nany(duplicated(conflict_quarter_ppp_2021))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(conflict_quarter_ppp_2022))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(conflict_quarter_ppp_2023))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(conflict_quarter_ppp_2024))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\nGreat now that there are no duplicates let's combine the *myanmar_owin* we created earlier from earlier section with the newly created ppp objects\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconflict_quarter_owin_2021 <- conflict_quarter_ppp_2021[myanmar_owin]\n\nconflict_quarter_owin_2022 <- conflict_quarter_ppp_2022[myanmar_owin]\n\nconflict_quarter_owin_2023 <- conflict_quarter_ppp_2023[myanmar_owin]\n\nconflict_quarter_owin_2024 <- conflict_quarter_ppp_2024[myanmar_owin]\n```\n:::\n\n\nLet's plot it out to see the correctness of the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(conflict_quarter_owin_2021)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-88-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(conflict_quarter_owin_2022)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-88-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(conflict_quarter_owin_2023)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-88-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(conflict_quarter_owin_2024)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-88-4.png){width=672}\n:::\n:::\n\n\n### STKDE\n\nNow to actually compute the STKDE as from the previous plot everything is looking, we will be using *spattemp.density*\n\n::: panel-tabset\n### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconflict_kde_2021 <- spattemp.density(conflict_quarter_owin_2021)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(conflict_kde_2021)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 50191.81 (spatial)\n  lambda = 0.0013 (temporal)\n\nNo. of observations\n  16195 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 4]\n\nEvaluation\n  128 x 128 x 4 trivariate lattice\n  Density range: [7.240123e-14, 2.154661e-09]\n```\n\n\n:::\n:::\n\n\n### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconflict_kde_2022 <- spattemp.density(conflict_quarter_owin_2022)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(conflict_kde_2022)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 45172.34 (spatial)\n  lambda = 0.0014 (temporal)\n\nNo. of observations\n  15900 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 4]\n\nEvaluation\n  128 x 128 x 4 trivariate lattice\n  Density range: [7.65362e-18, 2.240138e-09]\n```\n\n\n:::\n:::\n\n\n### 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconflict_kde_2023 <- spattemp.density(conflict_quarter_owin_2023)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(conflict_kde_2023)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 53201.61 (spatial)\n  lambda = 0.0017 (temporal)\n\nNo. of observations\n  13187 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 4]\n\nEvaluation\n  128 x 128 x 4 trivariate lattice\n  Density range: [4.999165e-20, 1.52776e-09]\n```\n\n\n:::\n:::\n\n\n### 2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconflict_kde_2024 <- spattemp.density(conflict_quarter_owin_2024)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(conflict_kde_2024)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 64230.75 (spatial)\n  lambda = 8e-04 (temporal)\n\nNo. of observations\n  6002 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [-210008.6, 724647.6] x [1072026, 3158467]\n\nTemporal bound\n  [1, 2]\n\nEvaluation\n  128 x 128 x 2 trivariate lattice\n  Density range: [9.666474e-13, 4.621724e-09]\n```\n\n\n:::\n:::\n\n:::\n\nNow let's plot the graphs for the computed STKDE\n\n::: panel-tabset\n### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntims <- c(1,2,3,4)\n\npar(mfrow=c(1,4), cex.main = 1.5)\nfor(i in tims){\n  plot(conflict_kde_2021, i, \n       fix.range=TRUE,\n       override.par=FALSE,\n       main=paste(\"STKDE Q\",i))\n}\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-93-1.png){width=672}\n:::\n:::\n\n\n### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(1,4), cex.main = 1.5)\nfor(i in tims){\n  plot(conflict_kde_2022, i, \n       override.par=FALSE, \n       fix.range=TRUE, \n       main=paste(\"STKDE Q\",i))\n}\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-94-1.png){width=672}\n:::\n:::\n\n\n### 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(1,4),cex.main = 1.5)\n\nfor(i in tims){\n  plot(conflict_kde_2023, i, \n       override.par=FALSE, \n       fix.range=TRUE, \n       main=paste(\"STKDE Q\",i))\n}\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-95-1.png){width=672}\n:::\n:::\n\n\n### 2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntims_2 <- c(1,2)\n\npar(mfrow=c(1,2), cex.main = 1.2)\nfor(i in tims_2){\n  plot(conflict_kde_2024, i, \n       override.par=FALSE, \n       fix.range=TRUE,\n       main=paste(\"STKDE Q\",i))\n}\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-96-1.png){width=672}\n:::\n:::\n\n:::\n\n## **2nd Order Analysis STKDE**\n\nThere not much tutorial in class for performing 2nd order analysis for STKDE, so the closest that prof has provided us is <https://pages.charlotte.edu/eric-delmelle/wp-content/uploads/sites/150/2019/09/Spatiotemporal-Point-Pattern-Analysis-Using-Ripleys-K-Function.pdf> which is to use Ripleys K function for 2nd order analysis which would be what I'm doing.\n\nLikewise for what we did in 2nd order analysis for KDE let's split up the data into the *years* and *event_type*. I shall only focus on Mandalay region and for the year 2024. Since from the STKDE it has difference from the KDE. Also as with K function it is already computationally intensive and our dataset is huge, its better to narrow it down.\n\nLet's first split acled\\_*sf_2024* into the four main *event_type* again and only selecting the quarter.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled_stkde_2024_battle <- acled_sf_2024 %>% filter(event_type == \"Battles\") %>% select(quarter)\nacled_stkde_2024_explosion <- acled_sf_2024 %>% filter(event_type == \"Explosions/Remote violence\") %>% select(quarter)\nacled_stkde_2024_strat <- acled_sf_2024 %>% filter(event_type == \"Strategic developments\")%>% select(quarter)\nacled_stkde_2024_violence <- acled_sf_2024 %>% filter(event_type == \"Violence against civilians\") %>% select(quarter)\n```\n:::\n\n\n### PPP object\n\nLet's convert into ppp object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstkde_ppp_battle <- as.ppp(acled_stkde_2024_battle)\nstkde_ppp_explosion <- as.ppp(acled_stkde_2024_explosion)\nstkde_ppp_strat <- as.ppp(acled_stkde_2024_strat)\nstkde_ppp_violence <- as.ppp(acled_stkde_2024_violence)\n```\n:::\n\n\nLet's check for duplicates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nany(duplicated(stkde_ppp_battle))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(stkde_ppp_explosion))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(stkde_ppp_strat))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(stkde_ppp_violence))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\nLet's remove the duplicates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstkde_ppp_battle <- rjitter(stkde_ppp_battle, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nstkde_ppp_explosion <- rjitter(stkde_ppp_explosion, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nstkde_ppp_strat <- rjitter(stkde_ppp_strat, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\nstkde_ppp_violence <- rjitter(stkde_ppp_violence, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n```\n:::\n\n\nMaking sure that there are no more duplicates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nany(duplicated(stkde_ppp_battle))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(stkde_ppp_explosion))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(stkde_ppp_strat))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nany(duplicated(stkde_ppp_violence))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\nLet's finally combine it with the mandalay owin object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstkde_owin_battle <- stkde_ppp_battle[mandalay_owin]\nstkde_owin_explosion <- stkde_ppp_explosion[mandalay_owin]\nstkde_owin_strat <- stkde_ppp_strat[mandalay_owin]\nstkde_owin_violence <- stkde_ppp_violence[mandalay_owin]\n```\n:::\n\n\n::: panel-tabset\n### Battle\n\n\n::: {.cell}\n\n```{.r .cell-code}\nK_battle = Kest(stkde_owin_battle, correction = \"Ripley\")\nplot(K_battle, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-103-1.png){width=672}\n:::\n:::\n\n\n### Explosion/Remote violence\n\n\n::: {.cell}\n\n```{.r .cell-code}\nK_explosion = Kest(stkde_owin_explosion, correction = \"Ripley\")\nplot(K_explosion, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-104-1.png){width=672}\n:::\n:::\n\n\n### Strategic Development\n\n\n::: {.cell}\n\n```{.r .cell-code}\nK_Strat = Kest(stkde_owin_strat, correction = \"Ripley\")\nplot(K_Strat, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-105-1.png){width=672}\n:::\n:::\n\n\n### Violence against civilians\n\n\n::: {.cell}\n\n```{.r .cell-code}\nK_violence = Kest(stkde_owin_violence, correction = \"Ripley\")\nplot(K_violence, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-106-1.png){width=672}\n:::\n:::\n\n:::\n\nThen let's run the CSR simulation and plot it. If its\n\n-   Above the envelop: significant cluster pattern\n\n-   Below the envelop: significant regular\n\n-   Inside the envelop: CSR\n\n::: panel-tabset\n### Battles\n\n\n::: {.cell}\n\n```{.r .cell-code}\nK_battle.csr <- envelope(stkde_owin_battle, Kest, nsim = 99, rank = 1, glocal=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(K_battle.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-107-1.png){width=672}\n:::\n:::\n\n\n### Explosion/Remote violence\n\n\n::: {.cell}\n\n```{.r .cell-code}\nK_explosion.csr <- envelope(stkde_owin_explosion, Kest, nsim = 99, rank = 1, glocal=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(K_explosion.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-108-1.png){width=672}\n:::\n:::\n\n\n### Strategic Development\n\n\n::: {.cell}\n\n```{.r .cell-code}\nK_Strat.csr <- envelope(stkde_owin_strat, Kest, nsim = 99, rank = 1, glocal=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(K_Strat.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-109-1.png){width=672}\n:::\n:::\n\n\n### Violence against civilians\n\n\n::: {.cell}\n\n```{.r .cell-code}\nK_violence.csr <- envelope(stkde_owin_violence, Kest, nsim = 99, rank = 1, glocal=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(K_violence.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-110-1.png){width=672}\n:::\n:::\n\n:::\n\nLikewise it does show that the conflicts in 2024 are all generally clustered as it is above the envelope\n\n## STKDE Insights\n\nIntuitively you will think that KDE and STKDE would give the same results cause at the end of the day we are using the same data points. However something STKDE have an advantage is that it takes over a period of time as a consideration.\n\nFor the most part STKDE show similar insights in that the conflicts happen in the middle of Myanmar and the outskirts. But something different would be the intensity of the density, as with KDE we changed our own sigma to make it more visible which could explain the difference. Our STKDE has lower intensity for some of the years for example 2023 Q3, which suggest that there is not much conflict clustering as we initially thought. Another one would be 2024 Q2, our KDE suggest that there isn't much conflicts as the intensity of the density is quite low generally around the whole of Myanmar. But our STKDE suggest that for 2024 Q2 there is a lot of conflicts on the central and outskirts of Myanmar, again this could be due to it factoring a period of time into the computation.\n\nOverall both KDE and STKDE, shows that there are conflicts around the central of Myanmar and for the outskirts its generally the South of Myanmar. And currently in the year 2024 its correlating to the Rakhine State where the Arakan Army insurgency took place earlier this year and is still ongoing.\n",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}